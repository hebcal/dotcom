#cloud-config
users:
  - name: hebcal
    gecos: Hebcal
    shell: /bin/bash
    ssh-authorized-keys:
      - ssh-dss AAAAB3NzaC1kc3MAAAEBAKCDECinh9zUhHeKibZAumzTqk9MA0VVJJ4EH2Uf2wc1qXZlEA5d6k8LLc7FUZWQ8bn+4BjDEtXlzxAS/t3SmdFJCwaRhzu/5FDZi9usLCCbWsYgUos//uOD37Wpg0fkgIMVi/Jc0L8KceoHACuA9ORV9EIzmvvIFiz8ONKurRilGyL2QMncEN52MQgShv6nhAdFHk99/JAYY7SLhzy8UNBUQunpBJfNNGCHN+IPLMo7hiq5AfQxSHpo6dYeSLRJdWg76CMCf//VC7E/i+6ucHGsO/ZpZ3XVCP7dvt/U1j6qLcm0LWO0n3JrlrEOx9pwGgqyEopoeAaOrXgpydBxm/MAAAAVAIjvZ2FF09u4SQ+LuyQlIMfLB3HVAAABADR6tZndAMf/1p88jwc+Bo5wTglcPkktEXCxPMwrM5/WB6GCFsVGAZsn4/yOq8/Bijgy+RzKZT1is678Jk6Y+Ux1jTv8fjvKzSXn5G6/PT71ayElyKxo3WUTP5m0tnbwLXGBSJz1FfAGv7LHLC7+Crn+1Mlu0N4+JAoxd/C2xK/A1UdeeCwdfHOTuHB0wYEvf0vBSv+6qCv3aKC8cu6kstemijMCCXLPnK0uwls/1lgseeZCz2fOcW1N6kQgrSddHfyqQrQS1Zw22fRYepAYKPUmx3AcFJ6pWp3nZq7eboTRqzcJ8WL1LTrBnArZ/H7u974AuWE2u5hF50k38J8zvJEAAAEAZg9HmKsR/tEGah899pMSCpuTxrVcI3P969qbNq6i4na7S8UE2jd36Vs+bseibHlH+cTm9Fdtey990RuKklBoXlDovOKrmQ2dpzcIDUDyrAs/uRxVHqeZ8KKg9VDsf6xf0kHMX5sCFlge085o8c3AS+bu/pYLRlUpx8LGmshy9HNbHSoU4iAsB/EdRtSnor3vaZozHurPiVM7UwgW9w+C4aK5eQoHL45tTrDefDRCHn+b1w7ZTnEqM/vpHtpBvsN3FErnPVPmTuWl+EBNFRoNE5TzMcBJMa3p80t23VGaa+0mbNPE6VlIzbkXP1jZdw2sEpvE/UxdOnTnN9QAY8g9UA== mradwin@michael-radwins-computer.local
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCoHvNAA5UBj4DpCZsTtjjX82mM2eBECmc6wGXtZeaeqxyBdJBkkDfPmZwwL6OfCceoGHvU4zPEvonFFkjgDwRQYItVnYA4LolgbAjTVf0Bi+dv7Ny8B4fuMin0GvdrCs3BiX018Dw0za5UlopHESPHTKyAOAovR0tftQ+AzAFzae6ac/zZHK0odvoqWROlxSxOJZZl61EVM42ExYOSKm5tsc3g/ObW4wtaMOKUFHGFHfeeSRzYy1kacPVwIbEKTRCh8gLrL3yfOW/un6XF0U9eB+cqE0mVASWTOY59V7EWMJnUZaQcB8yZDeSF/iNEnB2e6ewUMo5X4nqYTaofTUjv mradwin@MTVL12027dd2a
  - name: mradwin
    gecos: Michael J. Radwin
    groups: sudo
    shell: /bin/bash
    ssh-authorized-keys:
      - ssh-dss AAAAB3NzaC1kc3MAAAEBAKCDECinh9zUhHeKibZAumzTqk9MA0VVJJ4EH2Uf2wc1qXZlEA5d6k8LLc7FUZWQ8bn+4BjDEtXlzxAS/t3SmdFJCwaRhzu/5FDZi9usLCCbWsYgUos//uOD37Wpg0fkgIMVi/Jc0L8KceoHACuA9ORV9EIzmvvIFiz8ONKurRilGyL2QMncEN52MQgShv6nhAdFHk99/JAYY7SLhzy8UNBUQunpBJfNNGCHN+IPLMo7hiq5AfQxSHpo6dYeSLRJdWg76CMCf//VC7E/i+6ucHGsO/ZpZ3XVCP7dvt/U1j6qLcm0LWO0n3JrlrEOx9pwGgqyEopoeAaOrXgpydBxm/MAAAAVAIjvZ2FF09u4SQ+LuyQlIMfLB3HVAAABADR6tZndAMf/1p88jwc+Bo5wTglcPkktEXCxPMwrM5/WB6GCFsVGAZsn4/yOq8/Bijgy+RzKZT1is678Jk6Y+Ux1jTv8fjvKzSXn5G6/PT71ayElyKxo3WUTP5m0tnbwLXGBSJz1FfAGv7LHLC7+Crn+1Mlu0N4+JAoxd/C2xK/A1UdeeCwdfHOTuHB0wYEvf0vBSv+6qCv3aKC8cu6kstemijMCCXLPnK0uwls/1lgseeZCz2fOcW1N6kQgrSddHfyqQrQS1Zw22fRYepAYKPUmx3AcFJ6pWp3nZq7eboTRqzcJ8WL1LTrBnArZ/H7u974AuWE2u5hF50k38J8zvJEAAAEAZg9HmKsR/tEGah899pMSCpuTxrVcI3P969qbNq6i4na7S8UE2jd36Vs+bseibHlH+cTm9Fdtey990RuKklBoXlDovOKrmQ2dpzcIDUDyrAs/uRxVHqeZ8KKg9VDsf6xf0kHMX5sCFlge085o8c3AS+bu/pYLRlUpx8LGmshy9HNbHSoU4iAsB/EdRtSnor3vaZozHurPiVM7UwgW9w+C4aK5eQoHL45tTrDefDRCHn+b1w7ZTnEqM/vpHtpBvsN3FErnPVPmTuWl+EBNFRoNE5TzMcBJMa3p80t23VGaa+0mbNPE6VlIzbkXP1jZdw2sEpvE/UxdOnTnN9QAY8g9UA== mradwin@michael-radwins-computer.local
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCoHvNAA5UBj4DpCZsTtjjX82mM2eBECmc6wGXtZeaeqxyBdJBkkDfPmZwwL6OfCceoGHvU4zPEvonFFkjgDwRQYItVnYA4LolgbAjTVf0Bi+dv7Ny8B4fuMin0GvdrCs3BiX018Dw0za5UlopHESPHTKyAOAovR0tftQ+AzAFzae6ac/zZHK0odvoqWROlxSxOJZZl61EVM42ExYOSKm5tsc3g/ObW4wtaMOKUFHGFHfeeSRzYy1kacPVwIbEKTRCh8gLrL3yfOW/un6XF0U9eB+cqE0mVASWTOY59V7EWMJnUZaQcB8yZDeSF/iNEnB2e6ewUMo5X4nqYTaofTUjv mradwin@MTVL12027dd2a
  - name: nagios
    gecos: Nagios
    shell: /bin/bash
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCkIbumcez+ggabZq5wJwgA226Q09hG2AT45+epPdXL4KpEn46kb3ZF1Gk1QTUQhMUiDQaoHUGwUSAxGUcC/dOfDkBPHfpDLNZylvGzDMjLg8lvw1/IQC2XbCmDTqZ13Dqc2dnex9hN+N7NimnqaaGW0rvIDjlz27r0tr7N66oXTvPsWItahBQowSkr+agoCLeWxzjKUAabZJ38yp6TNFjU53WadiFGSF7gVjBhGId7F8ukSu2yYl/0i6isU3VK72q7AfKcp/n0dcm1t+BsQKJjH6AY1lmf5R6ZO2qAlRorzpYMzlK5A5VYcp4ILgKSTWKnFNHoP508/4UjD9Pt7uoL nagios@hebcalmonitor

debconf_selections: |     # Need to perserve newlines
    sysstat sysstat/enable boolean true
    unattended-upgrades unattended-upgrades/enable_auto_updates boolean true
    postfix postfix/mailname string hebcal.com
    postfix postfix/main_mailer_type select Satellite system
    postfix postfix/relayhost string email-smtp.us-east-1.amazonaws.com

package_upgrade: true

packages:
  - git
  - sysstat
  - netfilter-persistent
  - iptables-persistent
  - libsasl2-modules
  - postfix
  - bsd-mailx
  - monitoring-plugins-basic
  - libvarnishapi-dev
  - varnish
  - make
  - unattended-upgrades
  - hitch
  - certbot
  - software-properties-common

write_files:
  - path: /etc/systemd/system/varnish.service.d/customexec.conf
    permissions: '0644'
    content: |
      # Creted by Hebcal cloud-config.yaml
      [Service]
      ExecStart=
      ExecStart=/usr/sbin/varnishd -j unix,user=vcache -F -a :80 -a '[127.0.0.1]:6086,PROXY' -T localhost:6082 -f /etc/varnish/default.vcl -S /etc/varnish/secret -s file,/var/lib/varnish/hebcal/varnish_storage.bin,16G
  - path: /etc/varnish/hebcal.vcl
    permissions: '0644'
    content: |
      # Creted by Hebcal cloud-config.yaml
      vcl 4.0;
      include "/etc/varnish/letsencrypt.vcl";
      import directors;
      backend server1 {
          .host = "dl19-internal.hebcal.com";
          .port = "8080";
          .probe = {
              .url = "/robots.txt";
              .timeout = 1s;
              .interval = 5s;
              .window = 5;
              .threshold = 3;
          }
      }
      backend server2 {
          .host = "dl20-internal.hebcal.com";
          .port = "8080";
          .probe = {
              .url = "/robots.txt";
              .timeout = 1s;
              .interval = 5s;
              .window = 5;
              .threshold = 3;
          }
      }
      sub vcl_init {
          new bar = directors.round_robin();
          bar.add_backend(server1);
          bar.add_backend(server2);
      }
      sub vcl_recv {
          set req.backend_hint = bar.backend();
          unset req.http.cookie;
          set req.http.X-Client-IP = client.ip;
          if (req.http.Accept-Encoding) {
              if (req.http.Accept-Encoding ~ "gzip") {
                  set req.http.Accept-Encoding = "gzip";
              } elsif (req.http.Accept-Encoding ~ "deflate" && req.http.user-agent !~ "MSIE") {
                  set req.http.Accept-Encoding = "deflate";
              } else {
                  # unkown algorithm
                  unset req.http.Accept-Encoding;
              }
          }
      }
      sub vcl_backend_response {
      }
      sub vcl_deliver {
      }
  - path: /etc/varnish/letsencrypt.vcl
    permissions: '0644'
    content: |
      # Creted by Hebcal cloud-config.yaml
      vcl 4.0;
      backend certbot {
         .host = "127.0.0.1";
         .port = "8080";
      }
      sub vcl_recv {
          if (req.url ~ "^/\.well-known/acme-challenge/") {
              set req.backend_hint = certbot;
              return(pipe);
          }
      }
      sub vcl_pipe {
          if (req.backend_hint == certbot) {
              set req.http.Connection = "close";
              return(pipe);
          }
      }
  - path: /usr/local/bin/hitch-deploy-hook
    permissions: '0755'
    content: |
      #!/bin/bash
      # Full path to pre-generated Diffie Hellman Parameters file
      dhparams=/etc/hitch/dhparams.pem
      if [[ "${RENEWED_LINEAGE}" == "" ]]; then
          echo "Error: missing RENEWED_LINEAGE env variable." >&2
          exit 1
      fi
      umask 077
      cat ${RENEWED_LINEAGE}/privkey.pem \
       ${RENEWED_LINEAGE}/fullchain.pem \
       ${dhparams} > ${RENEWED_LINEAGE}/hitch-bundle.pem
  - path: /etc/systemd/system/hitch.service.d/limits.conf
    permissions: '0644'
    content: |
      # Creted by Hebcal cloud-config.yaml
      [Service]
      LimitNOFILE=32768
  - path: /etc/hitch/hitch.conf
    permissions: '0644'
    content: |
      # Creted by Hebcal cloud-config.yaml
      frontend = "[*]:443"
      ciphers  = "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"
      # Send traffic to the Varnish backend using the PROXY protocol
      backend        = "[127.0.0.1]:6086"
      write-proxy-v2 = on
      # List of PEM files, each with key, certificates and dhparams
      pem-file = "/etc/letsencrypt/live/download.hebcal.com/hitch-bundle.pem"

runcmd:
  - service netfilter-persistent flush
  - iptables -F
  - iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
  - iptables -A INPUT -p tcp --dport ssh -j ACCEPT
  - iptables -A INPUT -p tcp --dport http -j ACCEPT
  - iptables -A INPUT -p tcp --dport https -j ACCEPT
  - iptables -A INPUT -p icmp -j ACCEPT
  - iptables -A INPUT -s 10.0.0.0/8 -j ACCEPT
  - iptables -A INPUT -j DROP
  - iptables -I INPUT 1 -i lo -j ACCEPT
  - service netfilter-persistent save
  - fallocate -l 2G /swapfile
  - chmod 600 /swapfile
  - mkswap /swapfile
  - swapon /swapfile
  - swapon -s
  - free -m
  - echo "/swapfile   none    swap    sw    0   0" >> /etc/fstab
  - sysctl vm.swappiness=10
  - sysctl vm.vfs_cache_pressure=50
  - echo "vm.swappiness = 10" >> /etc/sysctl.conf
  - echo "vm.vfs_cache_pressure = 50" >> /etc/sysctl.conf
  - sysctl net.netfilter.nf_conntrack_max=524288
  - sysctl net.nf_conntrack_max=524288
  - echo "net.netfilter.nf_conntrack_max = 524288" >> /etc/sysctl.conf
  - echo "net.nf_conntrack_max = 524288" >> /etc/sysctl.conf
  - echo "nf_conntrack" >> /etc/modules
  - adduser mradwin hebcal
  - perl -pi -e 's/^.*PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
  - systemctl reload ssh.service
  - git clone https://github.com/hebcal/dotcom.git /tmp/dotcom
  - cp /tmp/dotcom/devops/etc/postfix/main.cf /etc/postfix/main.cf
  - systemctl stop varnish.service
  - mv /etc/varnish/default.vcl /etc/varnish/default.vcl.orig 
  - cp /etc/varnish/hebcal.vcl /etc/varnish/default.vcl
  - mkdir /var/lib/varnish/hebcal
  - systemctl enable varnish.service
  - systemctl daemon-reload
  - systemctl start varnish.service
  - systemctl reload postfix.service
  - systemctl stop hitch.service
  - nice openssl dhparam 2048 | tee /etc/hitch/dhparams.pem
  - certbot certonly -m mradwin@hebcal.com --agree-tos --non-interactive --standalone --preferred-challenges http --http-01-port 8080 -d download.hebcal.com --deploy-hook="/usr/local/bin/hitch-deploy-hook" --post-hook="systemctl reload hitch"
  - systemctl enable certbot.timer
  - systemctl start certbot.timer
  - systemctl start hitch.service
