#cloud-config
packages:
  - netfilter-persistent
  - iptables-persistent
  - varnish

write_files:
  - path: /etc/systemd/system/varnish.service.d/customexec.conf
    permissions: '0644'
    content: |
      # Creted by Hebcal cloud-config.yaml
      [Service]
      ExecStart=
      ExecStart=/usr/sbin/varnishd -j unix,user=vcache -F -a :80 -a '127.0.0.1:6086,PROXY' -T localhost:6082 -f /etc/varnish/default.vcl -S /etc/varnish/secret -s malloc,768m
  - path: /etc/varnish/minimal.vcl
    permissions: '0644'
    content: |
      # Creted by Hebcal cloud-config.yaml
      vcl 4.0;
      backend default {
          .host = "www-internal.hebcal.com";
          .port = "8080";
      }
      sub vcl_recv {
          set req.http.X-Client-IP = client.ip;
          if (req.url ~ "^/i/"
              || req.url ~ "^/holidays/"
              || req.url ~ "^/sedrot/"
              || req.url ~ "^/home/wp-content/themes/wordpress-bootstrap-.*/"
              || req.url ~ "^/home/wp-content/plugins/syntaxhighlighter/"
              || req.url ~ "^/home/wp-content/uploads/"
              || req.url ~ "^/home/wp-includes/js/") {
              unset req.http.cookie;
          }
          if (req.url ~ "^/shabbat/\?" || req.url ~ "\?.*cfg=") {
              unset req.http.cookie;
          }
          if (req.url ~ "^/favicon\.ico" || req.url ~ "^/etc/") {
              unset req.http.cookie;
              unset req.http.user-agent;
          }
          if (req.http.Accept-Encoding) {
              if (req.url ~ "\.(jpg|png|gif|gz|tgz|bz2|tbz|mp3|ogg)$") {
                  # No point in compressing these
                  unset req.http.Accept-Encoding;
              } elsif (req.http.Accept-Encoding ~ "gzip") {
                  set req.http.Accept-Encoding = "gzip";
              } elsif (req.http.Accept-Encoding ~ "deflate" && req.http.user-agent !~ "MSIE") {
                  set req.http.Accept-Encoding = "deflate";
              } else {
                  # unkown algorithm
                  unset req.http.Accept-Encoding;
              }
          }
      }
      sub vcl_backend_response {
      }
      sub vcl_deliver {
          if (req.url ~ "\?.*cfg=") {
              set resp.http.Access-Control-Allow-Origin = "*";
          }
      }

runcmd:
  - service netfilter-persistent flush
  - iptables -F
  - iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
  - iptables -A INPUT -p tcp --dport ssh -j ACCEPT
  - iptables -A INPUT -p tcp --dport http -j ACCEPT
  - iptables -A INPUT -p tcp --dport https -j ACCEPT
  - iptables -A INPUT -p icmp -j ACCEPT
  - iptables -A INPUT -s 10.0.0.0/8 -j ACCEPT
  - iptables -A INPUT -j DROP
  - iptables -I INPUT 1 -i lo -j ACCEPT
  - service netfilter-persistent save
  - perl -pi -e 's/^.*PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
  - systemctl reload ssh.service
  - systemctl stop varnish.service
  - mv /etc/varnish/default.vcl /etc/varnish/default.vcl.orig 
  - cp /etc/varnish/minimal.vcl /etc/varnish/default.vcl
  - systemctl enable varnish.service
  - systemctl daemon-reload
  - systemctl start varnish.service
